serial-unit-tests-and-coverage:
  extends: .test_template
  stage: test
  rules:
    - if: '$RUN_UNIT_TESTS == "true" || $RUN_ALL_TESTS == "true"'
  image: registry.jsc.fz-juelich.de/muralikrishnan1/ippl:latest
  tags:
    - linux
    - opensuse
  script: |
    echo "Building IPPL with tests and coverage enabled"
    echo "Running tests"
    
    mkdir -p build
    cd build


    cmake .. \
      -DCMAKE_BUILD_TYPE=Debug \
      -DCMAKE_CXX_STANDARD=20 \
      -DIPPL_ENABLE_TESTS=True \
      -DIPPL_ENABLE_SOLVERS=ON \
      -DIPPL_ENABLE_FFT=ON \
      -DIPPL_ENABLE_UNIT_TESTS=True \
      -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
      -DIPPL_ENABLE_COVERAGE=ON \
      -DKokkos_VERSION=4.5.00

    make -j 8

    ctest -L unit -j 16 --output-on-failure --output-junit tests/test_results.xml || EXIT_CODE=$?

    if [ "$EXIT_CODE" -eq 8 ]; then echo "Internal CTest error (OOM?)"; fi

    echo "Generage coverage report"

    cd ..

    chmod +x ci/scripts/generate_coverage.sh
    bash ci/scripts/generate_coverage.sh

    mkdir -p "${RESULTS_DIR}/gcc-xml"
    echo "Test results will be stored in: ${RESULTS_DIR}/gcc-xml"
    mv build/tests/* "${RESULTS_DIR}/gcc-xml"

    echo '{"name": "Serial Unit"}' > "${RESULTS_DIR}/gcc-xml/context.json"

    mkdir -p "$CI_PROJECT_DIR/results/${CI_PIPELINE_ID}/coverage"
    mv coverage_report/* "$CI_PROJECT_DIR/results/${CI_PIPELINE_ID}/coverage"

